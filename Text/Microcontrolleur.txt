J'ai lu que la configuration idéale pour un drone est:

un microcontrolleur qui roule avec des intterupts ou un RTOS pour:
- IMU
- contrôle des moteurs
- PID controller

Un microcontrolleur plus puissant ou basé sur un OS comme un Raspberry Pi pour:
- Communication
- Navigation haut niveau
- Analyse vidéo
- Autonomie

Je pense aussi qu'il va être plus facile de s'acheter un microcontrolleur et de le faire intéragir avec pleins d'autres chips comme:
- IMU
- GPS
- Power management
- RF trans/récep
- Wi-fi
On peut surement avoir des free samples pour des IC comme ça. Ensuite il s'agit de tout mettre sur un PCB

Idées pour le petit microcontrolleur:

- ARM based MCU avec RTOS (Juan a un peu d'expérience)
- Microchip
- Atmel AVR (Simon a pas pire d'expérience)
Pour le code, les 2 supportent asm mais AVR est moins pain in the ass (mais anyway c'est pas vraiment pertinent d'utiliser asm).
Si on utilise C/C++, le compilateur de AVR est gcc (gratuit et plus optimisé que celui des PIC de Microchip) alors que le compilateur
de Microchip est soit payant ou pas optimisé. Aussi ce C/C++ compilé par gcc est universel (compatible avec TOUT!) ce qui n'est pas
le cas de MPLab (Microchip).
