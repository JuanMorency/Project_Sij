
LEDStripTest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000006  00800200  00000780  00000814  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000780  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000021  00800206  00800206  0000081a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000081a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000084c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d0  00000000  00000000  0000088c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000172c  00000000  00000000  0000095c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000070e  00000000  00000000  00002088  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000739  00000000  00000000  00002796  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001c0  00000000  00000000  00002ed0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000005bd  00000000  00000000  00003090  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000b02  00000000  00000000  0000364d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000a0  00000000  00000000  0000414f  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	7b c0       	rjmp	.+246    	; 0xf8 <__dtors_end>
   2:	00 00       	nop
   4:	a7 c0       	rjmp	.+334    	; 0x154 <__bad_interrupt>
   6:	00 00       	nop
   8:	a5 c0       	rjmp	.+330    	; 0x154 <__bad_interrupt>
   a:	00 00       	nop
   c:	a3 c0       	rjmp	.+326    	; 0x154 <__bad_interrupt>
   e:	00 00       	nop
  10:	a1 c0       	rjmp	.+322    	; 0x154 <__bad_interrupt>
  12:	00 00       	nop
  14:	9f c0       	rjmp	.+318    	; 0x154 <__bad_interrupt>
  16:	00 00       	nop
  18:	9d c0       	rjmp	.+314    	; 0x154 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	9b c0       	rjmp	.+310    	; 0x154 <__bad_interrupt>
  1e:	00 00       	nop
  20:	99 c0       	rjmp	.+306    	; 0x154 <__bad_interrupt>
  22:	00 00       	nop
  24:	97 c0       	rjmp	.+302    	; 0x154 <__bad_interrupt>
  26:	00 00       	nop
  28:	95 c0       	rjmp	.+298    	; 0x154 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	93 c0       	rjmp	.+294    	; 0x154 <__bad_interrupt>
  2e:	00 00       	nop
  30:	91 c0       	rjmp	.+290    	; 0x154 <__bad_interrupt>
  32:	00 00       	nop
  34:	8f c0       	rjmp	.+286    	; 0x154 <__bad_interrupt>
  36:	00 00       	nop
  38:	8d c0       	rjmp	.+282    	; 0x154 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	8b c0       	rjmp	.+278    	; 0x154 <__bad_interrupt>
  3e:	00 00       	nop
  40:	89 c0       	rjmp	.+274    	; 0x154 <__bad_interrupt>
  42:	00 00       	nop
  44:	87 c0       	rjmp	.+270    	; 0x154 <__bad_interrupt>
  46:	00 00       	nop
  48:	85 c0       	rjmp	.+266    	; 0x154 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	83 c0       	rjmp	.+262    	; 0x154 <__bad_interrupt>
  4e:	00 00       	nop
  50:	81 c0       	rjmp	.+258    	; 0x154 <__bad_interrupt>
  52:	00 00       	nop
  54:	7f c0       	rjmp	.+254    	; 0x154 <__bad_interrupt>
  56:	00 00       	nop
  58:	7d c0       	rjmp	.+250    	; 0x154 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	7b c0       	rjmp	.+246    	; 0x154 <__bad_interrupt>
  5e:	00 00       	nop
  60:	79 c0       	rjmp	.+242    	; 0x154 <__bad_interrupt>
  62:	00 00       	nop
  64:	77 c0       	rjmp	.+238    	; 0x154 <__bad_interrupt>
  66:	00 00       	nop
  68:	75 c0       	rjmp	.+234    	; 0x154 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	73 c0       	rjmp	.+230    	; 0x154 <__bad_interrupt>
  6e:	00 00       	nop
  70:	71 c0       	rjmp	.+226    	; 0x154 <__bad_interrupt>
  72:	00 00       	nop
  74:	6f c0       	rjmp	.+222    	; 0x154 <__bad_interrupt>
  76:	00 00       	nop
  78:	6d c0       	rjmp	.+218    	; 0x154 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	6b c0       	rjmp	.+214    	; 0x154 <__bad_interrupt>
  7e:	00 00       	nop
  80:	69 c0       	rjmp	.+210    	; 0x154 <__bad_interrupt>
  82:	00 00       	nop
  84:	67 c0       	rjmp	.+206    	; 0x154 <__bad_interrupt>
  86:	00 00       	nop
  88:	65 c0       	rjmp	.+202    	; 0x154 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	63 c0       	rjmp	.+198    	; 0x154 <__bad_interrupt>
  8e:	00 00       	nop
  90:	61 c0       	rjmp	.+194    	; 0x154 <__bad_interrupt>
  92:	00 00       	nop
  94:	5f c0       	rjmp	.+190    	; 0x154 <__bad_interrupt>
  96:	00 00       	nop
  98:	5d c0       	rjmp	.+186    	; 0x154 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	5b c0       	rjmp	.+182    	; 0x154 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	59 c0       	rjmp	.+178    	; 0x154 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	57 c0       	rjmp	.+174    	; 0x154 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	55 c0       	rjmp	.+170    	; 0x154 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	53 c0       	rjmp	.+166    	; 0x154 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	51 c0       	rjmp	.+162    	; 0x154 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	4f c0       	rjmp	.+158    	; 0x154 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	4d c0       	rjmp	.+154    	; 0x154 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	4b c0       	rjmp	.+150    	; 0x154 <__bad_interrupt>
  be:	00 00       	nop
  c0:	49 c0       	rjmp	.+146    	; 0x154 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	47 c0       	rjmp	.+142    	; 0x154 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	45 c0       	rjmp	.+138    	; 0x154 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	43 c0       	rjmp	.+134    	; 0x154 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	41 c0       	rjmp	.+130    	; 0x154 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	3f c0       	rjmp	.+126    	; 0x154 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	3d c0       	rjmp	.+122    	; 0x154 <__bad_interrupt>
  da:	00 00       	nop
  dc:	3b c0       	rjmp	.+118    	; 0x154 <__bad_interrupt>
  de:	00 00       	nop
  e0:	39 c0       	rjmp	.+114    	; 0x154 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	b2 01       	movw	r22, r4
  e6:	c3 01       	movw	r24, r6
  e8:	d4 01       	movw	r26, r8
  ea:	e5 01       	movw	r28, r10
  ec:	f6 01       	movw	r30, r12
  ee:	07 02       	muls	r16, r23
  f0:	18 02       	muls	r17, r24
  f2:	29 02       	muls	r18, r25

000000f4 <__ctors_start>:
  f4:	49 01       	movw	r8, r18

000000f6 <__ctors_end>:
  f6:	56 01       	movw	r10, r12

000000f8 <__dtors_end>:
  f8:	11 24       	eor	r1, r1
  fa:	1f be       	out	0x3f, r1	; 63
  fc:	cf ef       	ldi	r28, 0xFF	; 255
  fe:	d1 e2       	ldi	r29, 0x21	; 33
 100:	de bf       	out	0x3e, r29	; 62
 102:	cd bf       	out	0x3d, r28	; 61
 104:	00 e0       	ldi	r16, 0x00	; 0
 106:	0c bf       	out	0x3c, r16	; 60

00000108 <__do_copy_data>:
 108:	12 e0       	ldi	r17, 0x02	; 2
 10a:	a0 e0       	ldi	r26, 0x00	; 0
 10c:	b2 e0       	ldi	r27, 0x02	; 2
 10e:	e0 e8       	ldi	r30, 0x80	; 128
 110:	f7 e0       	ldi	r31, 0x07	; 7
 112:	00 e0       	ldi	r16, 0x00	; 0
 114:	0b bf       	out	0x3b, r16	; 59
 116:	02 c0       	rjmp	.+4      	; 0x11c <__do_copy_data+0x14>
 118:	07 90       	elpm	r0, Z+
 11a:	0d 92       	st	X+, r0
 11c:	a6 30       	cpi	r26, 0x06	; 6
 11e:	b1 07       	cpc	r27, r17
 120:	d9 f7       	brne	.-10     	; 0x118 <__do_copy_data+0x10>

00000122 <__do_clear_bss>:
 122:	22 e0       	ldi	r18, 0x02	; 2
 124:	a6 e0       	ldi	r26, 0x06	; 6
 126:	b2 e0       	ldi	r27, 0x02	; 2
 128:	01 c0       	rjmp	.+2      	; 0x12c <.do_clear_bss_start>

0000012a <.do_clear_bss_loop>:
 12a:	1d 92       	st	X+, r1

0000012c <.do_clear_bss_start>:
 12c:	a7 32       	cpi	r26, 0x27	; 39
 12e:	b2 07       	cpc	r27, r18
 130:	e1 f7       	brne	.-8      	; 0x12a <.do_clear_bss_loop>

00000132 <__do_global_ctors>:
 132:	10 e0       	ldi	r17, 0x00	; 0
 134:	cb e7       	ldi	r28, 0x7B	; 123
 136:	d0 e0       	ldi	r29, 0x00	; 0
 138:	00 e0       	ldi	r16, 0x00	; 0
 13a:	05 c0       	rjmp	.+10     	; 0x146 <__do_global_ctors+0x14>
 13c:	21 97       	sbiw	r28, 0x01	; 1
 13e:	01 09       	sbc	r16, r1
 140:	80 2f       	mov	r24, r16
 142:	fe 01       	movw	r30, r28
 144:	d7 d1       	rcall	.+942    	; 0x4f4 <__tablejump2__>
 146:	ca 37       	cpi	r28, 0x7A	; 122
 148:	d1 07       	cpc	r29, r17
 14a:	80 e0       	ldi	r24, 0x00	; 0
 14c:	08 07       	cpc	r16, r24
 14e:	b1 f7       	brne	.-20     	; 0x13c <__do_global_ctors+0xa>
 150:	2a d0       	rcall	.+84     	; 0x1a6 <main>
 152:	05 c3       	rjmp	.+1546   	; 0x75e <__do_global_dtors>

00000154 <__bad_interrupt>:
 154:	55 cf       	rjmp	.-342    	; 0x0 <__vectors>

00000156 <_ZN6WS281221ws2812_sendarray_maskEPhjhS0_S0_>:
#define w_nop4  w_nop2 w_nop2
#define w_nop8  w_nop4 w_nop4
#define w_nop16 w_nop8 w_nop8

void  WS2812::ws2812_sendarray_mask(uint8_t *data,uint16_t datlen,uint8_t maskhi,uint8_t *port, uint8_t *portreg)
{
 156:	0f 93       	push	r16
 158:	1f 93       	push	r17
 15a:	cf 93       	push	r28
 15c:	d8 01       	movw	r26, r16
  uint8_t curbyte,ctr,masklo;
  uint8_t sreg_prev;
  
  masklo = ~maskhi & *port;
 15e:	8c 91       	ld	r24, X
 160:	92 2f       	mov	r25, r18
 162:	90 95       	com	r25
 164:	98 23       	and	r25, r24
  maskhi |= *port;
 166:	28 2b       	or	r18, r24
  sreg_prev=SREG;
 168:	cf b7       	in	r28, 0x3f	; 63
  cli();  
 16a:	f8 94       	cli

  while (datlen--) {
 16c:	41 15       	cp	r20, r1
 16e:	51 05       	cpc	r21, r1
 170:	a9 f0       	breq	.+42     	; 0x19c <skipone55+0xc>
 172:	fb 01       	movw	r30, r22
 174:	64 0f       	add	r22, r20
 176:	75 1f       	adc	r23, r21
    curbyte=*data++;
 178:	81 91       	ld	r24, Z+
    "       dec   %0    \n\t"    //  '1' [+4] '0' [+3]
    "       brne  loop%=\n\t"    //  '1' [+5] '0' [+4]
    :	"=&d" (ctr)
//    :	"r" (curbyte), "I" (_SFR_IO_ADDR(ws2812_PORTREG)), "r" (maskhi), "r" (masklo)
    :	"r" (curbyte), "x" (port), "r" (maskhi), "r" (masklo)
    );
 17a:	38 e0       	ldi	r19, 0x08	; 8

0000017c <loop55>:
 17c:	2c 93       	st	X, r18
 17e:	00 c0       	rjmp	.+0      	; 0x180 <loop55+0x4>
 180:	87 ff       	sbrs	r24, 7
 182:	9c 93       	st	X, r25
 184:	88 0f       	add	r24, r24
 186:	00 c0       	rjmp	.+0      	; 0x188 <loop55+0xc>
 188:	00 c0       	rjmp	.+0      	; 0x18a <loop55+0xe>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <loop55+0x10>
 18c:	08 f4       	brcc	.+2      	; 0x190 <skipone55>
 18e:	9c 93       	st	X, r25

00000190 <skipone55>:
 190:	00 c0       	rjmp	.+0      	; 0x192 <skipone55+0x2>
 192:	3a 95       	dec	r19
 194:	99 f7       	brne	.-26     	; 0x17c <loop55>
  masklo = ~maskhi & *port;
  maskhi |= *port;
  sreg_prev=SREG;
  cli();  

  while (datlen--) {
 196:	e6 17       	cp	r30, r22
 198:	f7 07       	cpc	r31, r23
 19a:	71 f7       	brne	.-36     	; 0x178 <_ZN6WS281221ws2812_sendarray_maskEPhjhS0_S0_+0x22>
//    :	"r" (curbyte), "I" (_SFR_IO_ADDR(ws2812_PORTREG)), "r" (maskhi), "r" (masklo)
    :	"r" (curbyte), "x" (port), "r" (maskhi), "r" (masklo)
    );
  }
  
  SREG=sreg_prev;
 19c:	cf bf       	out	0x3f, r28	; 63
}
 19e:	cf 91       	pop	r28
 1a0:	1f 91       	pop	r17
 1a2:	0f 91       	pop	r16
 1a4:	08 95       	ret

000001a6 <main>:
	 }
 }

int main()
{
	LEDFRT.reset();
 1a6:	86 e1       	ldi	r24, 0x16	; 22
 1a8:	92 e0       	ldi	r25, 0x02	; 2
 1aa:	89 d1       	rcall	.+786    	; 0x4be <_ZN6WS28125resetEv>
		//LEDFRT.sync();
 //
		//_delay_ms(50);	
		for(int j = 0; j<100; j++)
		{
			valueFRT.b = 255; valueFRT.g = 255; valueFRT.r = 255; // RGB Value -> White strong
 1ac:	c6 e0       	ldi	r28, 0x06	; 6
 1ae:	d2 e0       	ldi	r29, 0x02	; 2
 1b0:	ff 24       	eor	r15, r15
 1b2:	fa 94       	dec	r15
			LEDFRT.set_crgb_at(j, valueFRT); // Set value at LED found at index j
			
			if(j>0)
			{
				valueFRT.b = 40; valueFRT.g = 40; valueFRT.r = 40; // RGB Value -> White weak
 1b4:	0f 2e       	mov	r0, r31
 1b6:	f8 e2       	ldi	r31, 0x28	; 40
 1b8:	ef 2e       	mov	r14, r31
 1ba:	f0 2d       	mov	r31, r0
				LEDFRT.set_crgb_at(j-1, valueFRT); // Set value at LED found at index j-1
			}

			if(j>1)
			{
				valueFRT.b = 15; valueFRT.g = 15; valueFRT.r = 15; // RGB Value -> White weak
 1bc:	0f 2e       	mov	r0, r31
 1be:	ff e0       	ldi	r31, 0x0F	; 15
 1c0:	df 2e       	mov	r13, r31
 1c2:	f0 2d       	mov	r31, r0
		//LEDFRT.sync();
 //
		//_delay_ms(50);	
		for(int j = 0; j<100; j++)
		{
			valueFRT.b = 255; valueFRT.g = 255; valueFRT.r = 255; // RGB Value -> White strong
 1c4:	fa 82       	std	Y+2, r15	; 0x02
 1c6:	f8 82       	st	Y, r15
 1c8:	f9 82       	std	Y+1, r15	; 0x01
			LEDFRT.set_crgb_at(j, valueFRT); // Set value at LED found at index j
 1ca:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <__data_end>
 1ce:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <__data_end+0x1>
 1d2:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <__data_end+0x2>
 1d6:	60 e0       	ldi	r22, 0x00	; 0
 1d8:	70 e0       	ldi	r23, 0x00	; 0
 1da:	86 e1       	ldi	r24, 0x16	; 22
 1dc:	92 e0       	ldi	r25, 0x02	; 2
 1de:	83 d0       	rcall	.+262    	; 0x2e6 <_ZN6WS281211set_crgb_atEj4cRGB>
		//}
		//// Sends the data to the LEDs
		//LEDFRT.sync();
 //
		//_delay_ms(50);	
		for(int j = 0; j<100; j++)
 1e0:	00 e0       	ldi	r16, 0x00	; 0
 1e2:	10 e0       	ldi	r17, 0x00	; 0
 1e4:	31 c0       	rjmp	.+98     	; 0x248 <main+0xa2>
		{
			valueFRT.b = 255; valueFRT.g = 255; valueFRT.r = 255; // RGB Value -> White strong
 1e6:	fa 82       	std	Y+2, r15	; 0x02
 1e8:	f8 82       	st	Y, r15
 1ea:	f9 82       	std	Y+1, r15	; 0x01
			LEDFRT.set_crgb_at(j, valueFRT); // Set value at LED found at index j
 1ec:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <__data_end>
 1f0:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <__data_end+0x1>
 1f4:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <__data_end+0x2>
 1f8:	b8 01       	movw	r22, r16
 1fa:	86 e1       	ldi	r24, 0x16	; 22
 1fc:	92 e0       	ldi	r25, 0x02	; 2
 1fe:	73 d0       	rcall	.+230    	; 0x2e6 <_ZN6WS281211set_crgb_atEj4cRGB>
			
			if(j>0)
 200:	10 16       	cp	r1, r16
 202:	11 06       	cpc	r1, r17
 204:	7c f4       	brge	.+30     	; 0x224 <main+0x7e>
			{
				valueFRT.b = 40; valueFRT.g = 40; valueFRT.r = 40; // RGB Value -> White weak
 206:	ea 82       	std	Y+2, r14	; 0x02
 208:	e8 82       	st	Y, r14
 20a:	e9 82       	std	Y+1, r14	; 0x01
				LEDFRT.set_crgb_at(j-1, valueFRT); // Set value at LED found at index j-1
 20c:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <__data_end>
 210:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <__data_end+0x1>
 214:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <__data_end+0x2>
 218:	b8 01       	movw	r22, r16
 21a:	61 50       	subi	r22, 0x01	; 1
 21c:	71 09       	sbc	r23, r1
 21e:	86 e1       	ldi	r24, 0x16	; 22
 220:	92 e0       	ldi	r25, 0x02	; 2
 222:	61 d0       	rcall	.+194    	; 0x2e6 <_ZN6WS281211set_crgb_atEj4cRGB>
			}

			if(j>1)
 224:	02 30       	cpi	r16, 0x02	; 2
 226:	11 05       	cpc	r17, r1
 228:	7c f0       	brlt	.+30     	; 0x248 <main+0xa2>
			{
				valueFRT.b = 15; valueFRT.g = 15; valueFRT.r = 15; // RGB Value -> White weak
 22a:	da 82       	std	Y+2, r13	; 0x02
 22c:	d8 82       	st	Y, r13
 22e:	d9 82       	std	Y+1, r13	; 0x01
				LEDFRT.set_crgb_at(j-2, valueFRT); // Set value at LED found at index j-1
 230:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <__data_end>
 234:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <__data_end+0x1>
 238:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <__data_end+0x2>
 23c:	b8 01       	movw	r22, r16
 23e:	62 50       	subi	r22, 0x02	; 2
 240:	71 09       	sbc	r23, r1
 242:	86 e1       	ldi	r24, 0x16	; 22
 244:	92 e0       	ldi	r25, 0x02	; 2
 246:	4f d0       	rcall	.+158    	; 0x2e6 <_ZN6WS281211set_crgb_atEj4cRGB>
			}
			
			if(j>2)
 248:	03 30       	cpi	r16, 0x03	; 3
 24a:	11 05       	cpc	r17, r1
 24c:	7c f0       	brlt	.+30     	; 0x26c <main+0xc6>
			{
				valueFRT.b = 0; valueFRT.g = 0; valueFRT.r = 0; // RGB Value -> White weak
 24e:	1a 82       	std	Y+2, r1	; 0x02
 250:	18 82       	st	Y, r1
 252:	19 82       	std	Y+1, r1	; 0x01
				LEDFRT.set_crgb_at(j-3, valueFRT); // Set value at LED found at index j-1
 254:	20 91 06 02 	lds	r18, 0x0206	; 0x800206 <__data_end>
 258:	30 91 07 02 	lds	r19, 0x0207	; 0x800207 <__data_end+0x1>
 25c:	40 91 08 02 	lds	r20, 0x0208	; 0x800208 <__data_end+0x2>
 260:	b8 01       	movw	r22, r16
 262:	63 50       	subi	r22, 0x03	; 3
 264:	71 09       	sbc	r23, r1
 266:	86 e1       	ldi	r24, 0x16	; 22
 268:	92 e0       	ldi	r25, 0x02	; 2
 26a:	3d d0       	rcall	.+122    	; 0x2e6 <_ZN6WS281211set_crgb_atEj4cRGB>
			}

			
			LEDFRT.sync(); // Sends the value to the LED
 26c:	86 e1       	ldi	r24, 0x16	; 22
 26e:	92 e0       	ldi	r25, 0x02	; 2
 270:	01 d1       	rcall	.+514    	; 0x474 <_ZN6WS28124syncEv>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 272:	2f ef       	ldi	r18, 0xFF	; 255
 274:	89 ef       	ldi	r24, 0xF9	; 249
 276:	90 e0       	ldi	r25, 0x00	; 0
 278:	21 50       	subi	r18, 0x01	; 1
 27a:	80 40       	sbci	r24, 0x00	; 0
 27c:	90 40       	sbci	r25, 0x00	; 0
 27e:	e1 f7       	brne	.-8      	; 0x278 <main+0xd2>
 280:	00 c0       	rjmp	.+0      	; 0x282 <main+0xdc>
 282:	00 00       	nop
		//}
		//// Sends the data to the LEDs
		//LEDFRT.sync();
 //
		//_delay_ms(50);	
		for(int j = 0; j<100; j++)
 284:	0f 5f       	subi	r16, 0xFF	; 255
 286:	1f 4f       	sbci	r17, 0xFF	; 255
 288:	04 36       	cpi	r16, 0x64	; 100
 28a:	11 05       	cpc	r17, r1
 28c:	09 f0       	breq	.+2      	; 0x290 <main+0xea>
 28e:	ab cf       	rjmp	.-170    	; 0x1e6 <main+0x40>
 290:	99 cf       	rjmp	.-206    	; 0x1c4 <main+0x1e>

00000292 <_GLOBAL__sub_I_LEDFRT>:
 */ 
#define F_CPU 16000000UL
#include "WS2812.h"
#include <util/delay.h>

WS2812 LEDFRT(100, FRT); // 1 LED
 292:	40 e0       	ldi	r20, 0x00	; 0
 294:	64 e6       	ldi	r22, 0x64	; 100
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	86 e1       	ldi	r24, 0x16	; 22
 29a:	92 e0       	ldi	r25, 0x02	; 2
 29c:	0e d0       	rcall	.+28     	; 0x2ba <_ZN6WS2812C1Ejh>
WS2812 LEDFRB(10, FRB); // 1 LED	
 29e:	41 e0       	ldi	r20, 0x01	; 1
 2a0:	6a e0       	ldi	r22, 0x0A	; 10
 2a2:	70 e0       	ldi	r23, 0x00	; 0
 2a4:	89 e0       	ldi	r24, 0x09	; 9
 2a6:	92 e0       	ldi	r25, 0x02	; 2
 2a8:	08 c0       	rjmp	.+16     	; 0x2ba <_ZN6WS2812C1Ejh>
 2aa:	08 95       	ret

000002ac <_GLOBAL__sub_D_LEDFRT>:
 2ac:	89 e0       	ldi	r24, 0x09	; 9
 2ae:	92 e0       	ldi	r25, 0x02	; 2
 2b0:	45 d0       	rcall	.+138    	; 0x33c <_ZN6WS2812D1Ev>
 */ 
#define F_CPU 16000000UL
#include "WS2812.h"
#include <util/delay.h>

WS2812 LEDFRT(100, FRT); // 1 LED
 2b2:	86 e1       	ldi	r24, 0x16	; 22
 2b4:	92 e0       	ldi	r25, 0x02	; 2
 2b6:	42 c0       	rjmp	.+132    	; 0x33c <_ZN6WS2812D1Ev>
 2b8:	08 95       	ret

000002ba <_ZN6WS2812C1Ejh>:
void WS2812::setOutput(volatile uint8_t *port, volatile uint8_t *ddr, uint8_t pin) 
{
	//seem to have problems with port F, except for F3..., can`t do shit
		pinMask = _BV(pin);
		ws2812_port = port;
		ws2812_port_reg = ddr;
 2ba:	cf 93       	push	r28
 2bc:	df 93       	push	r29
 2be:	ec 01       	movw	r28, r24
 2c0:	79 83       	std	Y+1, r23	; 0x01
 2c2:	68 83       	st	Y, r22
 2c4:	4c 87       	std	Y+12, r20	; 0x0c
 2c6:	cb 01       	movw	r24, r22
 2c8:	88 0f       	add	r24, r24
 2ca:	99 1f       	adc	r25, r25
 2cc:	86 0f       	add	r24, r22
 2ce:	97 1f       	adc	r25, r23
 2d0:	19 d1       	rcall	.+562    	; 0x504 <malloc>
 2d2:	9b 83       	std	Y+3, r25	; 0x03
 2d4:	8a 83       	std	Y+2, r24	; 0x02
 2d6:	1d 82       	std	Y+5, r1	; 0x05
 2d8:	81 e0       	ldi	r24, 0x01	; 1
 2da:	8c 83       	std	Y+4, r24	; 0x04
 2dc:	82 e0       	ldi	r24, 0x02	; 2
 2de:	8e 83       	std	Y+6, r24	; 0x06
 2e0:	df 91       	pop	r29
 2e2:	cf 91       	pop	r28
 2e4:	08 95       	ret

000002e6 <_ZN6WS281211set_crgb_atEj4cRGB>:
 2e6:	cf 93       	push	r28
 2e8:	df 93       	push	r29
 2ea:	ec 01       	movw	r28, r24
 2ec:	88 81       	ld	r24, Y
 2ee:	99 81       	ldd	r25, Y+1	; 0x01
 2f0:	68 17       	cp	r22, r24
 2f2:	79 07       	cpc	r23, r25
 2f4:	f8 f4       	brcc	.+62     	; 0x334 <_ZN6WS281211set_crgb_atEj4cRGB+0x4e>
 2f6:	fb 01       	movw	r30, r22
 2f8:	ee 0f       	add	r30, r30
 2fa:	ff 1f       	adc	r31, r31
 2fc:	6e 0f       	add	r22, r30
 2fe:	7f 1f       	adc	r23, r31
 300:	8c 81       	ldd	r24, Y+4	; 0x04
 302:	aa 81       	ldd	r26, Y+2	; 0x02
 304:	bb 81       	ldd	r27, Y+3	; 0x03
 306:	a6 0f       	add	r26, r22
 308:	b7 1f       	adc	r27, r23
 30a:	a8 0f       	add	r26, r24
 30c:	b1 1d       	adc	r27, r1
 30e:	3c 93       	st	X, r19
 310:	8d 81       	ldd	r24, Y+5	; 0x05
 312:	aa 81       	ldd	r26, Y+2	; 0x02
 314:	bb 81       	ldd	r27, Y+3	; 0x03
 316:	a6 0f       	add	r26, r22
 318:	b7 1f       	adc	r27, r23
 31a:	a8 0f       	add	r26, r24
 31c:	b1 1d       	adc	r27, r1
 31e:	2c 93       	st	X, r18
 320:	8e 81       	ldd	r24, Y+6	; 0x06
 322:	ea 81       	ldd	r30, Y+2	; 0x02
 324:	fb 81       	ldd	r31, Y+3	; 0x03
 326:	e6 0f       	add	r30, r22
 328:	f7 1f       	adc	r31, r23
 32a:	e8 0f       	add	r30, r24
 32c:	f1 1d       	adc	r31, r1
 32e:	40 83       	st	Z, r20
 330:	80 e0       	ldi	r24, 0x00	; 0
 332:	01 c0       	rjmp	.+2      	; 0x336 <_ZN6WS281211set_crgb_atEj4cRGB+0x50>
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	df 91       	pop	r29
 338:	cf 91       	pop	r28
 33a:	08 95       	ret

0000033c <_ZN6WS2812D1Ev>:
 33c:	fc 01       	movw	r30, r24
 33e:	82 81       	ldd	r24, Z+2	; 0x02
 340:	93 81       	ldd	r25, Z+3	; 0x03
 342:	75 c1       	rjmp	.+746    	; 0x62e <free>
 344:	08 95       	ret

00000346 <_ZN6WS281211setAsOutputEv>:
 346:	dc 01       	movw	r26, r24
 348:	1c 96       	adiw	r26, 0x0c	; 12
 34a:	4c 91       	ld	r20, X
 34c:	1c 97       	sbiw	r26, 0x0c	; 12
 34e:	50 e0       	ldi	r21, 0x00	; 0
 350:	48 30       	cpi	r20, 0x08	; 8
 352:	51 05       	cpc	r21, r1
 354:	08 f0       	brcs	.+2      	; 0x358 <_ZN6WS281211setAsOutputEv+0x12>
 356:	8d c0       	rjmp	.+282    	; 0x472 <__FUSE_REGION_LENGTH__+0x72>
 358:	fa 01       	movw	r30, r20
 35a:	88 27       	eor	r24, r24
 35c:	ee 58       	subi	r30, 0x8E	; 142
 35e:	ff 4f       	sbci	r31, 0xFF	; 255
 360:	8f 4f       	sbci	r24, 0xFF	; 255
 362:	c8 c0       	rjmp	.+400    	; 0x4f4 <__tablejump2__>
 364:	80 e4       	ldi	r24, 0x40	; 64
 366:	1b 96       	adiw	r26, 0x0b	; 11
 368:	8c 93       	st	X, r24
 36a:	1b 97       	sbiw	r26, 0x0b	; 11
 36c:	85 e2       	ldi	r24, 0x25	; 37
 36e:	90 e0       	ldi	r25, 0x00	; 0
 370:	18 96       	adiw	r26, 0x08	; 8
 372:	9c 93       	st	X, r25
 374:	8e 93       	st	-X, r24
 376:	17 97       	sbiw	r26, 0x07	; 7
 378:	84 e2       	ldi	r24, 0x24	; 36
 37a:	90 e0       	ldi	r25, 0x00	; 0
 37c:	1a 96       	adiw	r26, 0x0a	; 10
 37e:	9c 93       	st	X, r25
 380:	8e 93       	st	-X, r24
 382:	19 97       	sbiw	r26, 0x09	; 9
 384:	08 95       	ret
 386:	80 e8       	ldi	r24, 0x80	; 128
 388:	1b 96       	adiw	r26, 0x0b	; 11
 38a:	8c 93       	st	X, r24
 38c:	1b 97       	sbiw	r26, 0x0b	; 11
 38e:	85 e2       	ldi	r24, 0x25	; 37
 390:	90 e0       	ldi	r25, 0x00	; 0
 392:	18 96       	adiw	r26, 0x08	; 8
 394:	9c 93       	st	X, r25
 396:	8e 93       	st	-X, r24
 398:	17 97       	sbiw	r26, 0x07	; 7
 39a:	84 e2       	ldi	r24, 0x24	; 36
 39c:	90 e0       	ldi	r25, 0x00	; 0
 39e:	1a 96       	adiw	r26, 0x0a	; 10
 3a0:	9c 93       	st	X, r25
 3a2:	8e 93       	st	-X, r24
 3a4:	19 97       	sbiw	r26, 0x09	; 9
 3a6:	08 95       	ret
 3a8:	80 e8       	ldi	r24, 0x80	; 128
 3aa:	1b 96       	adiw	r26, 0x0b	; 11
 3ac:	8c 93       	st	X, r24
 3ae:	1b 97       	sbiw	r26, 0x0b	; 11
 3b0:	85 e0       	ldi	r24, 0x05	; 5
 3b2:	91 e0       	ldi	r25, 0x01	; 1
 3b4:	18 96       	adiw	r26, 0x08	; 8
 3b6:	9c 93       	st	X, r25
 3b8:	8e 93       	st	-X, r24
 3ba:	17 97       	sbiw	r26, 0x07	; 7
 3bc:	84 e0       	ldi	r24, 0x04	; 4
 3be:	91 e0       	ldi	r25, 0x01	; 1
 3c0:	1a 96       	adiw	r26, 0x0a	; 10
 3c2:	9c 93       	st	X, r25
 3c4:	8e 93       	st	-X, r24
 3c6:	19 97       	sbiw	r26, 0x09	; 9
 3c8:	08 95       	ret
 3ca:	80 e4       	ldi	r24, 0x40	; 64
 3cc:	1b 96       	adiw	r26, 0x0b	; 11
 3ce:	8c 93       	st	X, r24
 3d0:	1b 97       	sbiw	r26, 0x0b	; 11
 3d2:	85 e0       	ldi	r24, 0x05	; 5
 3d4:	91 e0       	ldi	r25, 0x01	; 1
 3d6:	18 96       	adiw	r26, 0x08	; 8
 3d8:	9c 93       	st	X, r25
 3da:	8e 93       	st	-X, r24
 3dc:	17 97       	sbiw	r26, 0x07	; 7
 3de:	84 e0       	ldi	r24, 0x04	; 4
 3e0:	91 e0       	ldi	r25, 0x01	; 1
 3e2:	1a 96       	adiw	r26, 0x0a	; 10
 3e4:	9c 93       	st	X, r25
 3e6:	8e 93       	st	-X, r24
 3e8:	19 97       	sbiw	r26, 0x09	; 9
 3ea:	08 95       	ret
 3ec:	80 e8       	ldi	r24, 0x80	; 128
 3ee:	1b 96       	adiw	r26, 0x0b	; 11
 3f0:	8c 93       	st	X, r24
 3f2:	1b 97       	sbiw	r26, 0x0b	; 11
 3f4:	81 e3       	ldi	r24, 0x31	; 49
 3f6:	90 e0       	ldi	r25, 0x00	; 0
 3f8:	18 96       	adiw	r26, 0x08	; 8
 3fa:	9c 93       	st	X, r25
 3fc:	8e 93       	st	-X, r24
 3fe:	17 97       	sbiw	r26, 0x07	; 7
 400:	80 e3       	ldi	r24, 0x30	; 48
 402:	90 e0       	ldi	r25, 0x00	; 0
 404:	1a 96       	adiw	r26, 0x0a	; 10
 406:	9c 93       	st	X, r25
 408:	8e 93       	st	-X, r24
 40a:	19 97       	sbiw	r26, 0x09	; 9
 40c:	08 95       	ret
 40e:	80 e4       	ldi	r24, 0x40	; 64
 410:	1b 96       	adiw	r26, 0x0b	; 11
 412:	8c 93       	st	X, r24
 414:	1b 97       	sbiw	r26, 0x0b	; 11
 416:	81 e3       	ldi	r24, 0x31	; 49
 418:	90 e0       	ldi	r25, 0x00	; 0
 41a:	18 96       	adiw	r26, 0x08	; 8
 41c:	9c 93       	st	X, r25
 41e:	8e 93       	st	-X, r24
 420:	17 97       	sbiw	r26, 0x07	; 7
 422:	80 e3       	ldi	r24, 0x30	; 48
 424:	90 e0       	ldi	r25, 0x00	; 0
 426:	1a 96       	adiw	r26, 0x0a	; 10
 428:	9c 93       	st	X, r25
 42a:	8e 93       	st	-X, r24
 42c:	19 97       	sbiw	r26, 0x09	; 9
 42e:	08 95       	ret
 430:	81 e0       	ldi	r24, 0x01	; 1
 432:	1b 96       	adiw	r26, 0x0b	; 11
 434:	8c 93       	st	X, r24
 436:	1b 97       	sbiw	r26, 0x0b	; 11
 438:	88 e0       	ldi	r24, 0x08	; 8
 43a:	91 e0       	ldi	r25, 0x01	; 1
 43c:	18 96       	adiw	r26, 0x08	; 8
 43e:	9c 93       	st	X, r25
 440:	8e 93       	st	-X, r24
 442:	17 97       	sbiw	r26, 0x07	; 7
 444:	87 e0       	ldi	r24, 0x07	; 7
 446:	91 e0       	ldi	r25, 0x01	; 1
 448:	1a 96       	adiw	r26, 0x0a	; 10
 44a:	9c 93       	st	X, r25
 44c:	8e 93       	st	-X, r24
 44e:	19 97       	sbiw	r26, 0x09	; 9
 450:	08 95       	ret
 452:	82 e0       	ldi	r24, 0x02	; 2
 454:	1b 96       	adiw	r26, 0x0b	; 11
 456:	8c 93       	st	X, r24
 458:	1b 97       	sbiw	r26, 0x0b	; 11
 45a:	88 e0       	ldi	r24, 0x08	; 8
 45c:	91 e0       	ldi	r25, 0x01	; 1
 45e:	18 96       	adiw	r26, 0x08	; 8
 460:	9c 93       	st	X, r25
 462:	8e 93       	st	-X, r24
 464:	17 97       	sbiw	r26, 0x07	; 7
 466:	87 e0       	ldi	r24, 0x07	; 7
 468:	91 e0       	ldi	r25, 0x01	; 1
 46a:	1a 96       	adiw	r26, 0x0a	; 10
 46c:	9c 93       	st	X, r25
 46e:	8e 93       	st	-X, r24
 470:	19 97       	sbiw	r26, 0x09	; 9
 472:	08 95       	ret

00000474 <_ZN6WS28124syncEv>:
 474:	ef 92       	push	r14
 476:	ff 92       	push	r15
 478:	0f 93       	push	r16
 47a:	1f 93       	push	r17
 47c:	cf 93       	push	r28
 47e:	df 93       	push	r29
 480:	ec 01       	movw	r28, r24
 482:	61 df       	rcall	.-318    	; 0x346 <_ZN6WS281211setAsOutputEv>
 484:	e9 85       	ldd	r30, Y+9	; 0x09
 486:	fa 85       	ldd	r31, Y+10	; 0x0a
 488:	90 81       	ld	r25, Z
 48a:	8b 85       	ldd	r24, Y+11	; 0x0b
 48c:	89 2b       	or	r24, r25
 48e:	80 83       	st	Z, r24
 490:	e9 84       	ldd	r14, Y+9	; 0x09
 492:	fa 84       	ldd	r15, Y+10	; 0x0a
 494:	0f 81       	ldd	r16, Y+7	; 0x07
 496:	18 85       	ldd	r17, Y+8	; 0x08
 498:	48 81       	ld	r20, Y
 49a:	59 81       	ldd	r21, Y+1	; 0x01
 49c:	ca 01       	movw	r24, r20
 49e:	88 0f       	add	r24, r24
 4a0:	99 1f       	adc	r25, r25
 4a2:	48 0f       	add	r20, r24
 4a4:	59 1f       	adc	r21, r25
 4a6:	6a 81       	ldd	r22, Y+2	; 0x02
 4a8:	7b 81       	ldd	r23, Y+3	; 0x03
 4aa:	2b 85       	ldd	r18, Y+11	; 0x0b
 4ac:	ce 01       	movw	r24, r28
 4ae:	53 de       	rcall	.-858    	; 0x156 <_ZN6WS281221ws2812_sendarray_maskEPhjhS0_S0_>
 4b0:	df 91       	pop	r29
 4b2:	cf 91       	pop	r28
 4b4:	1f 91       	pop	r17
 4b6:	0f 91       	pop	r16
 4b8:	ff 90       	pop	r15
 4ba:	ef 90       	pop	r14
 4bc:	08 95       	ret

000004be <_ZN6WS28125resetEv>:

}

void WS2812::reset()
{
 4be:	dc 01       	movw	r26, r24
	int ledNumber3x = count_led*3;
 4c0:	2d 91       	ld	r18, X+
 4c2:	3c 91       	ld	r19, X
 4c4:	11 97       	sbiw	r26, 0x01	; 1
 4c6:	a9 01       	movw	r20, r18
 4c8:	44 0f       	add	r20, r20
 4ca:	55 1f       	adc	r21, r21
 4cc:	42 0f       	add	r20, r18
 4ce:	53 1f       	adc	r21, r19
	for(int i = 0; i < ledNumber3x; i++)
 4d0:	14 16       	cp	r1, r20
 4d2:	15 06       	cpc	r1, r21
 4d4:	74 f4       	brge	.+28     	; 0x4f2 <_ZN6WS28125resetEv+0x34>
 4d6:	20 e0       	ldi	r18, 0x00	; 0
 4d8:	30 e0       	ldi	r19, 0x00	; 0
	{
		pixels[i] = 0;
 4da:	12 96       	adiw	r26, 0x02	; 2
 4dc:	ed 91       	ld	r30, X+
 4de:	fc 91       	ld	r31, X
 4e0:	13 97       	sbiw	r26, 0x03	; 3
 4e2:	e2 0f       	add	r30, r18
 4e4:	f3 1f       	adc	r31, r19
 4e6:	10 82       	st	Z, r1
}

void WS2812::reset()
{
	int ledNumber3x = count_led*3;
	for(int i = 0; i < ledNumber3x; i++)
 4e8:	2f 5f       	subi	r18, 0xFF	; 255
 4ea:	3f 4f       	sbci	r19, 0xFF	; 255
 4ec:	42 17       	cp	r20, r18
 4ee:	53 07       	cpc	r21, r19
 4f0:	a1 f7       	brne	.-24     	; 0x4da <_ZN6WS28125resetEv+0x1c>
 4f2:	08 95       	ret

000004f4 <__tablejump2__>:
 4f4:	ee 0f       	add	r30, r30
 4f6:	ff 1f       	adc	r31, r31
 4f8:	88 1f       	adc	r24, r24
 4fa:	8b bf       	out	0x3b, r24	; 59
 4fc:	07 90       	elpm	r0, Z+
 4fe:	f6 91       	elpm	r31, Z
 500:	e0 2d       	mov	r30, r0
 502:	19 94       	eijmp

00000504 <malloc>:
 504:	cf 93       	push	r28
 506:	df 93       	push	r29
 508:	82 30       	cpi	r24, 0x02	; 2
 50a:	91 05       	cpc	r25, r1
 50c:	10 f4       	brcc	.+4      	; 0x512 <malloc+0xe>
 50e:	82 e0       	ldi	r24, 0x02	; 2
 510:	90 e0       	ldi	r25, 0x00	; 0
 512:	e0 91 25 02 	lds	r30, 0x0225	; 0x800225 <__flp>
 516:	f0 91 26 02 	lds	r31, 0x0226	; 0x800226 <__flp+0x1>
 51a:	20 e0       	ldi	r18, 0x00	; 0
 51c:	30 e0       	ldi	r19, 0x00	; 0
 51e:	c0 e0       	ldi	r28, 0x00	; 0
 520:	d0 e0       	ldi	r29, 0x00	; 0
 522:	30 97       	sbiw	r30, 0x00	; 0
 524:	11 f1       	breq	.+68     	; 0x56a <malloc+0x66>
 526:	40 81       	ld	r20, Z
 528:	51 81       	ldd	r21, Z+1	; 0x01
 52a:	48 17       	cp	r20, r24
 52c:	59 07       	cpc	r21, r25
 52e:	c0 f0       	brcs	.+48     	; 0x560 <malloc+0x5c>
 530:	48 17       	cp	r20, r24
 532:	59 07       	cpc	r21, r25
 534:	61 f4       	brne	.+24     	; 0x54e <malloc+0x4a>
 536:	82 81       	ldd	r24, Z+2	; 0x02
 538:	93 81       	ldd	r25, Z+3	; 0x03
 53a:	20 97       	sbiw	r28, 0x00	; 0
 53c:	19 f0       	breq	.+6      	; 0x544 <malloc+0x40>
 53e:	9b 83       	std	Y+3, r25	; 0x03
 540:	8a 83       	std	Y+2, r24	; 0x02
 542:	2b c0       	rjmp	.+86     	; 0x59a <malloc+0x96>
 544:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <__flp+0x1>
 548:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <__flp>
 54c:	26 c0       	rjmp	.+76     	; 0x59a <malloc+0x96>
 54e:	21 15       	cp	r18, r1
 550:	31 05       	cpc	r19, r1
 552:	19 f0       	breq	.+6      	; 0x55a <malloc+0x56>
 554:	42 17       	cp	r20, r18
 556:	53 07       	cpc	r21, r19
 558:	18 f4       	brcc	.+6      	; 0x560 <malloc+0x5c>
 55a:	9a 01       	movw	r18, r20
 55c:	be 01       	movw	r22, r28
 55e:	df 01       	movw	r26, r30
 560:	ef 01       	movw	r28, r30
 562:	02 80       	ldd	r0, Z+2	; 0x02
 564:	f3 81       	ldd	r31, Z+3	; 0x03
 566:	e0 2d       	mov	r30, r0
 568:	dc cf       	rjmp	.-72     	; 0x522 <malloc+0x1e>
 56a:	21 15       	cp	r18, r1
 56c:	31 05       	cpc	r19, r1
 56e:	09 f1       	breq	.+66     	; 0x5b2 <malloc+0xae>
 570:	28 1b       	sub	r18, r24
 572:	39 0b       	sbc	r19, r25
 574:	24 30       	cpi	r18, 0x04	; 4
 576:	31 05       	cpc	r19, r1
 578:	90 f4       	brcc	.+36     	; 0x59e <malloc+0x9a>
 57a:	12 96       	adiw	r26, 0x02	; 2
 57c:	8d 91       	ld	r24, X+
 57e:	9c 91       	ld	r25, X
 580:	13 97       	sbiw	r26, 0x03	; 3
 582:	61 15       	cp	r22, r1
 584:	71 05       	cpc	r23, r1
 586:	21 f0       	breq	.+8      	; 0x590 <malloc+0x8c>
 588:	fb 01       	movw	r30, r22
 58a:	93 83       	std	Z+3, r25	; 0x03
 58c:	82 83       	std	Z+2, r24	; 0x02
 58e:	04 c0       	rjmp	.+8      	; 0x598 <malloc+0x94>
 590:	90 93 26 02 	sts	0x0226, r25	; 0x800226 <__flp+0x1>
 594:	80 93 25 02 	sts	0x0225, r24	; 0x800225 <__flp>
 598:	fd 01       	movw	r30, r26
 59a:	32 96       	adiw	r30, 0x02	; 2
 59c:	44 c0       	rjmp	.+136    	; 0x626 <malloc+0x122>
 59e:	fd 01       	movw	r30, r26
 5a0:	e2 0f       	add	r30, r18
 5a2:	f3 1f       	adc	r31, r19
 5a4:	81 93       	st	Z+, r24
 5a6:	91 93       	st	Z+, r25
 5a8:	22 50       	subi	r18, 0x02	; 2
 5aa:	31 09       	sbc	r19, r1
 5ac:	2d 93       	st	X+, r18
 5ae:	3c 93       	st	X, r19
 5b0:	3a c0       	rjmp	.+116    	; 0x626 <malloc+0x122>
 5b2:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <__brkval>
 5b6:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <__brkval+0x1>
 5ba:	23 2b       	or	r18, r19
 5bc:	41 f4       	brne	.+16     	; 0x5ce <malloc+0xca>
 5be:	20 91 02 02 	lds	r18, 0x0202	; 0x800202 <__malloc_heap_start>
 5c2:	30 91 03 02 	lds	r19, 0x0203	; 0x800203 <__malloc_heap_start+0x1>
 5c6:	30 93 24 02 	sts	0x0224, r19	; 0x800224 <__brkval+0x1>
 5ca:	20 93 23 02 	sts	0x0223, r18	; 0x800223 <__brkval>
 5ce:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 5d2:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 5d6:	21 15       	cp	r18, r1
 5d8:	31 05       	cpc	r19, r1
 5da:	41 f4       	brne	.+16     	; 0x5ec <malloc+0xe8>
 5dc:	2d b7       	in	r18, 0x3d	; 61
 5de:	3e b7       	in	r19, 0x3e	; 62
 5e0:	40 91 04 02 	lds	r20, 0x0204	; 0x800204 <__malloc_margin>
 5e4:	50 91 05 02 	lds	r21, 0x0205	; 0x800205 <__malloc_margin+0x1>
 5e8:	24 1b       	sub	r18, r20
 5ea:	35 0b       	sbc	r19, r21
 5ec:	e0 91 23 02 	lds	r30, 0x0223	; 0x800223 <__brkval>
 5f0:	f0 91 24 02 	lds	r31, 0x0224	; 0x800224 <__brkval+0x1>
 5f4:	e2 17       	cp	r30, r18
 5f6:	f3 07       	cpc	r31, r19
 5f8:	a0 f4       	brcc	.+40     	; 0x622 <malloc+0x11e>
 5fa:	2e 1b       	sub	r18, r30
 5fc:	3f 0b       	sbc	r19, r31
 5fe:	28 17       	cp	r18, r24
 600:	39 07       	cpc	r19, r25
 602:	78 f0       	brcs	.+30     	; 0x622 <malloc+0x11e>
 604:	ac 01       	movw	r20, r24
 606:	4e 5f       	subi	r20, 0xFE	; 254
 608:	5f 4f       	sbci	r21, 0xFF	; 255
 60a:	24 17       	cp	r18, r20
 60c:	35 07       	cpc	r19, r21
 60e:	48 f0       	brcs	.+18     	; 0x622 <malloc+0x11e>
 610:	4e 0f       	add	r20, r30
 612:	5f 1f       	adc	r21, r31
 614:	50 93 24 02 	sts	0x0224, r21	; 0x800224 <__brkval+0x1>
 618:	40 93 23 02 	sts	0x0223, r20	; 0x800223 <__brkval>
 61c:	81 93       	st	Z+, r24
 61e:	91 93       	st	Z+, r25
 620:	02 c0       	rjmp	.+4      	; 0x626 <malloc+0x122>
 622:	e0 e0       	ldi	r30, 0x00	; 0
 624:	f0 e0       	ldi	r31, 0x00	; 0
 626:	cf 01       	movw	r24, r30
 628:	df 91       	pop	r29
 62a:	cf 91       	pop	r28
 62c:	08 95       	ret

0000062e <free>:
 62e:	0f 93       	push	r16
 630:	1f 93       	push	r17
 632:	cf 93       	push	r28
 634:	df 93       	push	r29
 636:	00 97       	sbiw	r24, 0x00	; 0
 638:	09 f4       	brne	.+2      	; 0x63c <free+0xe>
 63a:	8c c0       	rjmp	.+280    	; 0x754 <free+0x126>
 63c:	fc 01       	movw	r30, r24
 63e:	32 97       	sbiw	r30, 0x02	; 2
 640:	13 82       	std	Z+3, r1	; 0x03
 642:	12 82       	std	Z+2, r1	; 0x02
 644:	00 91 25 02 	lds	r16, 0x0225	; 0x800225 <__flp>
 648:	10 91 26 02 	lds	r17, 0x0226	; 0x800226 <__flp+0x1>
 64c:	01 15       	cp	r16, r1
 64e:	11 05       	cpc	r17, r1
 650:	81 f4       	brne	.+32     	; 0x672 <free+0x44>
 652:	20 81       	ld	r18, Z
 654:	31 81       	ldd	r19, Z+1	; 0x01
 656:	82 0f       	add	r24, r18
 658:	93 1f       	adc	r25, r19
 65a:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <__brkval>
 65e:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <__brkval+0x1>
 662:	28 17       	cp	r18, r24
 664:	39 07       	cpc	r19, r25
 666:	79 f5       	brne	.+94     	; 0x6c6 <free+0x98>
 668:	f0 93 24 02 	sts	0x0224, r31	; 0x800224 <__brkval+0x1>
 66c:	e0 93 23 02 	sts	0x0223, r30	; 0x800223 <__brkval>
 670:	71 c0       	rjmp	.+226    	; 0x754 <free+0x126>
 672:	d8 01       	movw	r26, r16
 674:	40 e0       	ldi	r20, 0x00	; 0
 676:	50 e0       	ldi	r21, 0x00	; 0
 678:	ae 17       	cp	r26, r30
 67a:	bf 07       	cpc	r27, r31
 67c:	50 f4       	brcc	.+20     	; 0x692 <free+0x64>
 67e:	12 96       	adiw	r26, 0x02	; 2
 680:	2d 91       	ld	r18, X+
 682:	3c 91       	ld	r19, X
 684:	13 97       	sbiw	r26, 0x03	; 3
 686:	ad 01       	movw	r20, r26
 688:	21 15       	cp	r18, r1
 68a:	31 05       	cpc	r19, r1
 68c:	09 f1       	breq	.+66     	; 0x6d0 <free+0xa2>
 68e:	d9 01       	movw	r26, r18
 690:	f3 cf       	rjmp	.-26     	; 0x678 <free+0x4a>
 692:	9d 01       	movw	r18, r26
 694:	da 01       	movw	r26, r20
 696:	33 83       	std	Z+3, r19	; 0x03
 698:	22 83       	std	Z+2, r18	; 0x02
 69a:	60 81       	ld	r22, Z
 69c:	71 81       	ldd	r23, Z+1	; 0x01
 69e:	86 0f       	add	r24, r22
 6a0:	97 1f       	adc	r25, r23
 6a2:	82 17       	cp	r24, r18
 6a4:	93 07       	cpc	r25, r19
 6a6:	69 f4       	brne	.+26     	; 0x6c2 <free+0x94>
 6a8:	ec 01       	movw	r28, r24
 6aa:	28 81       	ld	r18, Y
 6ac:	39 81       	ldd	r19, Y+1	; 0x01
 6ae:	26 0f       	add	r18, r22
 6b0:	37 1f       	adc	r19, r23
 6b2:	2e 5f       	subi	r18, 0xFE	; 254
 6b4:	3f 4f       	sbci	r19, 0xFF	; 255
 6b6:	31 83       	std	Z+1, r19	; 0x01
 6b8:	20 83       	st	Z, r18
 6ba:	8a 81       	ldd	r24, Y+2	; 0x02
 6bc:	9b 81       	ldd	r25, Y+3	; 0x03
 6be:	93 83       	std	Z+3, r25	; 0x03
 6c0:	82 83       	std	Z+2, r24	; 0x02
 6c2:	45 2b       	or	r20, r21
 6c4:	29 f4       	brne	.+10     	; 0x6d0 <free+0xa2>
 6c6:	f0 93 26 02 	sts	0x0226, r31	; 0x800226 <__flp+0x1>
 6ca:	e0 93 25 02 	sts	0x0225, r30	; 0x800225 <__flp>
 6ce:	42 c0       	rjmp	.+132    	; 0x754 <free+0x126>
 6d0:	13 96       	adiw	r26, 0x03	; 3
 6d2:	fc 93       	st	X, r31
 6d4:	ee 93       	st	-X, r30
 6d6:	12 97       	sbiw	r26, 0x02	; 2
 6d8:	ed 01       	movw	r28, r26
 6da:	49 91       	ld	r20, Y+
 6dc:	59 91       	ld	r21, Y+
 6de:	9e 01       	movw	r18, r28
 6e0:	24 0f       	add	r18, r20
 6e2:	35 1f       	adc	r19, r21
 6e4:	e2 17       	cp	r30, r18
 6e6:	f3 07       	cpc	r31, r19
 6e8:	71 f4       	brne	.+28     	; 0x706 <free+0xd8>
 6ea:	80 81       	ld	r24, Z
 6ec:	91 81       	ldd	r25, Z+1	; 0x01
 6ee:	84 0f       	add	r24, r20
 6f0:	95 1f       	adc	r25, r21
 6f2:	02 96       	adiw	r24, 0x02	; 2
 6f4:	11 96       	adiw	r26, 0x01	; 1
 6f6:	9c 93       	st	X, r25
 6f8:	8e 93       	st	-X, r24
 6fa:	82 81       	ldd	r24, Z+2	; 0x02
 6fc:	93 81       	ldd	r25, Z+3	; 0x03
 6fe:	13 96       	adiw	r26, 0x03	; 3
 700:	9c 93       	st	X, r25
 702:	8e 93       	st	-X, r24
 704:	12 97       	sbiw	r26, 0x02	; 2
 706:	e0 e0       	ldi	r30, 0x00	; 0
 708:	f0 e0       	ldi	r31, 0x00	; 0
 70a:	d8 01       	movw	r26, r16
 70c:	12 96       	adiw	r26, 0x02	; 2
 70e:	8d 91       	ld	r24, X+
 710:	9c 91       	ld	r25, X
 712:	13 97       	sbiw	r26, 0x03	; 3
 714:	00 97       	sbiw	r24, 0x00	; 0
 716:	19 f0       	breq	.+6      	; 0x71e <free+0xf0>
 718:	f8 01       	movw	r30, r16
 71a:	8c 01       	movw	r16, r24
 71c:	f6 cf       	rjmp	.-20     	; 0x70a <free+0xdc>
 71e:	8d 91       	ld	r24, X+
 720:	9c 91       	ld	r25, X
 722:	98 01       	movw	r18, r16
 724:	2e 5f       	subi	r18, 0xFE	; 254
 726:	3f 4f       	sbci	r19, 0xFF	; 255
 728:	82 0f       	add	r24, r18
 72a:	93 1f       	adc	r25, r19
 72c:	20 91 23 02 	lds	r18, 0x0223	; 0x800223 <__brkval>
 730:	30 91 24 02 	lds	r19, 0x0224	; 0x800224 <__brkval+0x1>
 734:	28 17       	cp	r18, r24
 736:	39 07       	cpc	r19, r25
 738:	69 f4       	brne	.+26     	; 0x754 <free+0x126>
 73a:	30 97       	sbiw	r30, 0x00	; 0
 73c:	29 f4       	brne	.+10     	; 0x748 <free+0x11a>
 73e:	10 92 26 02 	sts	0x0226, r1	; 0x800226 <__flp+0x1>
 742:	10 92 25 02 	sts	0x0225, r1	; 0x800225 <__flp>
 746:	02 c0       	rjmp	.+4      	; 0x74c <free+0x11e>
 748:	13 82       	std	Z+3, r1	; 0x03
 74a:	12 82       	std	Z+2, r1	; 0x02
 74c:	10 93 24 02 	sts	0x0224, r17	; 0x800224 <__brkval+0x1>
 750:	00 93 23 02 	sts	0x0223, r16	; 0x800223 <__brkval>
 754:	df 91       	pop	r29
 756:	cf 91       	pop	r28
 758:	1f 91       	pop	r17
 75a:	0f 91       	pop	r16
 75c:	08 95       	ret

0000075e <__do_global_dtors>:
 75e:	10 e0       	ldi	r17, 0x00	; 0
 760:	cb e7       	ldi	r28, 0x7B	; 123
 762:	d0 e0       	ldi	r29, 0x00	; 0
 764:	00 e0       	ldi	r16, 0x00	; 0
 766:	05 c0       	rjmp	.+10     	; 0x772 <__do_global_dtors+0x14>
 768:	80 2f       	mov	r24, r16
 76a:	fe 01       	movw	r30, r28
 76c:	c3 de       	rcall	.-634    	; 0x4f4 <__tablejump2__>
 76e:	21 96       	adiw	r28, 0x01	; 1
 770:	01 1d       	adc	r16, r1
 772:	cc 37       	cpi	r28, 0x7C	; 124
 774:	d1 07       	cpc	r29, r17
 776:	80 e0       	ldi	r24, 0x00	; 0
 778:	08 07       	cpc	r16, r24
 77a:	b1 f7       	brne	.-20     	; 0x768 <__do_global_dtors+0xa>
 77c:	f8 94       	cli

0000077e <__stop_program>:
 77e:	ff cf       	rjmp	.-2      	; 0x77e <__stop_program>
