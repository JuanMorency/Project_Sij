
PWMtest.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800200  00800200  0000020c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001b8  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  0000020c  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  0000023c  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000030  00000000  00000000  0000027c  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000162  00000000  00000000  000002ac  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000123  00000000  00000000  0000040e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000014f  00000000  00000000  00000531  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000054  00000000  00000000  00000680  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000001b2  00000000  00000000  000006d4  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000006e  00000000  00000000  00000886  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000020  00000000  00000000  000008f4  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	79 c0       	rjmp	.+242    	; 0xf8 <__bad_interrupt>
   6:	00 00       	nop
   8:	77 c0       	rjmp	.+238    	; 0xf8 <__bad_interrupt>
   a:	00 00       	nop
   c:	75 c0       	rjmp	.+234    	; 0xf8 <__bad_interrupt>
   e:	00 00       	nop
  10:	73 c0       	rjmp	.+230    	; 0xf8 <__bad_interrupt>
  12:	00 00       	nop
  14:	71 c0       	rjmp	.+226    	; 0xf8 <__bad_interrupt>
  16:	00 00       	nop
  18:	6f c0       	rjmp	.+222    	; 0xf8 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	6d c0       	rjmp	.+218    	; 0xf8 <__bad_interrupt>
  1e:	00 00       	nop
  20:	6b c0       	rjmp	.+214    	; 0xf8 <__bad_interrupt>
  22:	00 00       	nop
  24:	69 c0       	rjmp	.+210    	; 0xf8 <__bad_interrupt>
  26:	00 00       	nop
  28:	67 c0       	rjmp	.+206    	; 0xf8 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	65 c0       	rjmp	.+202    	; 0xf8 <__bad_interrupt>
  2e:	00 00       	nop
  30:	63 c0       	rjmp	.+198    	; 0xf8 <__bad_interrupt>
  32:	00 00       	nop
  34:	61 c0       	rjmp	.+194    	; 0xf8 <__bad_interrupt>
  36:	00 00       	nop
  38:	5f c0       	rjmp	.+190    	; 0xf8 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	5d c0       	rjmp	.+186    	; 0xf8 <__bad_interrupt>
  3e:	00 00       	nop
  40:	5b c0       	rjmp	.+182    	; 0xf8 <__bad_interrupt>
  42:	00 00       	nop
  44:	59 c0       	rjmp	.+178    	; 0xf8 <__bad_interrupt>
  46:	00 00       	nop
  48:	57 c0       	rjmp	.+174    	; 0xf8 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	55 c0       	rjmp	.+170    	; 0xf8 <__bad_interrupt>
  4e:	00 00       	nop
  50:	53 c0       	rjmp	.+166    	; 0xf8 <__bad_interrupt>
  52:	00 00       	nop
  54:	51 c0       	rjmp	.+162    	; 0xf8 <__bad_interrupt>
  56:	00 00       	nop
  58:	4f c0       	rjmp	.+158    	; 0xf8 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	4d c0       	rjmp	.+154    	; 0xf8 <__bad_interrupt>
  5e:	00 00       	nop
  60:	4b c0       	rjmp	.+150    	; 0xf8 <__bad_interrupt>
  62:	00 00       	nop
  64:	49 c0       	rjmp	.+146    	; 0xf8 <__bad_interrupt>
  66:	00 00       	nop
  68:	47 c0       	rjmp	.+142    	; 0xf8 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	45 c0       	rjmp	.+138    	; 0xf8 <__bad_interrupt>
  6e:	00 00       	nop
  70:	43 c0       	rjmp	.+134    	; 0xf8 <__bad_interrupt>
  72:	00 00       	nop
  74:	41 c0       	rjmp	.+130    	; 0xf8 <__bad_interrupt>
  76:	00 00       	nop
  78:	3f c0       	rjmp	.+126    	; 0xf8 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	3d c0       	rjmp	.+122    	; 0xf8 <__bad_interrupt>
  7e:	00 00       	nop
  80:	3b c0       	rjmp	.+118    	; 0xf8 <__bad_interrupt>
  82:	00 00       	nop
  84:	39 c0       	rjmp	.+114    	; 0xf8 <__bad_interrupt>
  86:	00 00       	nop
  88:	37 c0       	rjmp	.+110    	; 0xf8 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	35 c0       	rjmp	.+106    	; 0xf8 <__bad_interrupt>
  8e:	00 00       	nop
  90:	33 c0       	rjmp	.+102    	; 0xf8 <__bad_interrupt>
  92:	00 00       	nop
  94:	31 c0       	rjmp	.+98     	; 0xf8 <__bad_interrupt>
  96:	00 00       	nop
  98:	2f c0       	rjmp	.+94     	; 0xf8 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	2d c0       	rjmp	.+90     	; 0xf8 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	2b c0       	rjmp	.+86     	; 0xf8 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	29 c0       	rjmp	.+82     	; 0xf8 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	27 c0       	rjmp	.+78     	; 0xf8 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	25 c0       	rjmp	.+74     	; 0xf8 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	23 c0       	rjmp	.+70     	; 0xf8 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	21 c0       	rjmp	.+66     	; 0xf8 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	1f c0       	rjmp	.+62     	; 0xf8 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	1d c0       	rjmp	.+58     	; 0xf8 <__bad_interrupt>
  be:	00 00       	nop
  c0:	1b c0       	rjmp	.+54     	; 0xf8 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	19 c0       	rjmp	.+50     	; 0xf8 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	17 c0       	rjmp	.+46     	; 0xf8 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	15 c0       	rjmp	.+42     	; 0xf8 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	13 c0       	rjmp	.+38     	; 0xf8 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	11 c0       	rjmp	.+34     	; 0xf8 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	0f c0       	rjmp	.+30     	; 0xf8 <__bad_interrupt>
  da:	00 00       	nop
  dc:	0d c0       	rjmp	.+26     	; 0xf8 <__bad_interrupt>
  de:	00 00       	nop
  e0:	0b c0       	rjmp	.+22     	; 0xf8 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60
  f4:	46 d0       	rcall	.+140    	; 0x182 <main>
  f6:	5e c0       	rjmp	.+188    	; 0x1b4 <_exit>

000000f8 <__bad_interrupt>:
  f8:	83 cf       	rjmp	.-250    	; 0x0 <__vectors>

000000fa <_ZN3esc10initializeEv>:
}

void esc::initialize()
{
  //Timer/Counter 4/5 set to non-inverted Phase Correct PWM (8 bits resolution)
  TCCR4A |= (1 << COM4A1) | (1 << COM4B1) | (1 << WGM41);
  fa:	e0 ea       	ldi	r30, 0xA0	; 160
  fc:	f0 e0       	ldi	r31, 0x00	; 0
  fe:	80 81       	ld	r24, Z
 100:	82 6a       	ori	r24, 0xA2	; 162
 102:	80 83       	st	Z, r24
  TCCR5A |= (1 << COM5A1) | (1 << COM5B1) | (1 << WGM51);
 104:	e0 e2       	ldi	r30, 0x20	; 32
 106:	f1 e0       	ldi	r31, 0x01	; 1
 108:	80 81       	ld	r24, Z
 10a:	82 6a       	ori	r24, 0xA2	; 162
 10c:	80 83       	st	Z, r24

  //wave generator mode à phase correct full resolution et Prescaler = 1

  TCCR4B |= (1 << WGM43) | (1 << CS40) ;
 10e:	e1 ea       	ldi	r30, 0xA1	; 161
 110:	f0 e0       	ldi	r31, 0x00	; 0
 112:	80 81       	ld	r24, Z
 114:	81 61       	ori	r24, 0x11	; 17
 116:	80 83       	st	Z, r24
  TCCR5B |= (1 << WGM53) | (1 << CS50) ;
 118:	e1 e2       	ldi	r30, 0x21	; 33
 11a:	f1 e0       	ldi	r31, 0x01	; 1
 11c:	80 81       	ld	r24, Z
 11e:	81 61       	ori	r24, 0x11	; 17
 120:	80 83       	st	Z, r24

  //Force Output Compare disabled
  TCCR4C = 0;
 122:	10 92 a2 00 	sts	0x00A2, r1	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7000a2>
  TCCR5C = 0;
 126:	10 92 22 01 	sts	0x0122, r1	; 0x800122 <__TEXT_REGION_LENGTH__+0x700122>
  //nécéssaire? déjà à 0 de base
  
  //régler TOP à 4096
  ICR4H = 0x00;
 12a:	10 92 a7 00 	sts	0x00A7, r1	; 0x8000a7 <__TEXT_REGION_LENGTH__+0x7000a7>
  ICR4L = 0x19;
 12e:	89 e1       	ldi	r24, 0x19	; 25
 130:	80 93 a6 00 	sts	0x00A6, r24	; 0x8000a6 <__TEXT_REGION_LENGTH__+0x7000a6>
  ICR5H = 0x00;
 134:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__TEXT_REGION_LENGTH__+0x700127>
  ICR5L = 0x19;
 138:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__TEXT_REGION_LENGTH__+0x700126>
  
  //Set ESCs speed to 0
  OCR4AH = 0;
 13c:	10 92 a9 00 	sts	0x00A9, r1	; 0x8000a9 <__TEXT_REGION_LENGTH__+0x7000a9>
  OCR4AL = 0;
 140:	10 92 a8 00 	sts	0x00A8, r1	; 0x8000a8 <__TEXT_REGION_LENGTH__+0x7000a8>
  OCR4BH = 0;
 144:	10 92 ab 00 	sts	0x00AB, r1	; 0x8000ab <__TEXT_REGION_LENGTH__+0x7000ab>
  OCR4BL = 0;
 148:	10 92 aa 00 	sts	0x00AA, r1	; 0x8000aa <__TEXT_REGION_LENGTH__+0x7000aa>
  OCR5AH = 0;
 14c:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <__TEXT_REGION_LENGTH__+0x700129>
  OCR5AL = 0;
 150:	10 92 28 01 	sts	0x0128, r1	; 0x800128 <__TEXT_REGION_LENGTH__+0x700128>
  OCR5BH = 0;
 154:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <__TEXT_REGION_LENGTH__+0x70012b>
  OCR5BL = 0;
 158:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <__TEXT_REGION_LENGTH__+0x70012a>

  //Set Pins to output
  DDRL |= (1<<PL4) | (1<<PL3); 
 15c:	ea e0       	ldi	r30, 0x0A	; 10
 15e:	f1 e0       	ldi	r31, 0x01	; 1
 160:	80 81       	ld	r24, Z
 162:	88 61       	ori	r24, 0x18	; 24
 164:	80 83       	st	Z, r24
  DDRH |= (1<<PH4) | (1<<PH3);  
 166:	e1 e0       	ldi	r30, 0x01	; 1
 168:	f1 e0       	ldi	r31, 0x01	; 1
 16a:	80 81       	ld	r24, Z
 16c:	88 61       	ori	r24, 0x18	; 24
 16e:	80 83       	st	Z, r24
  
  //Timer 4/5 set to 0
  TCNT4H = 0;
 170:	10 92 a5 00 	sts	0x00A5, r1	; 0x8000a5 <__TEXT_REGION_LENGTH__+0x7000a5>
  TCNT4L = 0;
 174:	10 92 a4 00 	sts	0x00A4, r1	; 0x8000a4 <__TEXT_REGION_LENGTH__+0x7000a4>
  TCNT5H = 0;
 178:	10 92 25 01 	sts	0x0125, r1	; 0x800125 <__TEXT_REGION_LENGTH__+0x700125>
  TCNT5L = 0;
 17c:	10 92 24 01 	sts	0x0124, r1	; 0x800124 <__TEXT_REGION_LENGTH__+0x700124>
 180:	08 95       	ret

00000182 <main>:
#include <avr/interrupt.h>
#include "esc.cpp"
#include "esc.h"

int main()
{
 182:	cf 93       	push	r28
 184:	df 93       	push	r29
 186:	1f 92       	push	r1
 188:	cd b7       	in	r28, 0x3d	; 61
 18a:	de b7       	in	r29, 0x3e	; 62
	//create ESC object
	esc allESC;
	// initialize ESC
	allESC.initialize();
 18c:	ce 01       	movw	r24, r28
 18e:	01 96       	adiw	r24, 0x01	; 1
 190:	b4 df       	rcall	.-152    	; 0xfa <_ZN3esc10initializeEv>
	
	// run forever
	while(1)
	{
		OCR4AL = 0X02;
 192:	48 ea       	ldi	r20, 0xA8	; 168
 194:	50 e0       	ldi	r21, 0x00	; 0
 196:	82 e0       	ldi	r24, 0x02	; 2
		OCR4BL = 0X02;
 198:	2a ea       	ldi	r18, 0xAA	; 170
 19a:	30 e0       	ldi	r19, 0x00	; 0
		OCR5AL = 0X02;
 19c:	a8 e2       	ldi	r26, 0x28	; 40
 19e:	b1 e0       	ldi	r27, 0x01	; 1
		OCR5BL = 0X02;
 1a0:	6a e2       	ldi	r22, 0x2A	; 42
 1a2:	71 e0       	ldi	r23, 0x01	; 1
	allESC.initialize();
	
	// run forever
	while(1)
	{
		OCR4AL = 0X02;
 1a4:	fa 01       	movw	r30, r20
 1a6:	80 83       	st	Z, r24
		OCR4BL = 0X02;
 1a8:	f9 01       	movw	r30, r18
 1aa:	80 83       	st	Z, r24
		OCR5AL = 0X02;
 1ac:	8c 93       	st	X, r24
		OCR5BL = 0X02;
 1ae:	fb 01       	movw	r30, r22
 1b0:	80 83       	st	Z, r24
			////}
			//
		//}
		//// repeat this forever
	}
	return 0;
 1b2:	f8 cf       	rjmp	.-16     	; 0x1a4 <main+0x22>

000001b4 <_exit>:
 1b4:	f8 94       	cli

000001b6 <__stop_program>:
 1b6:	ff cf       	rjmp	.-2      	; 0x1b6 <__stop_program>
